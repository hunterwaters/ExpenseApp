{"ast":null,"code":"var _jsxFileName = \"/Users/hunterrwaters/Desktop/expense-tracker/client/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; //Initial State\n\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; // Create Context \n\nexport const GlobalContext = createContext(initialState); //Provider Component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); //Actions\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/transactions', transaction, config);\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/hunterrwaters/Desktop/expense-tracker/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","err","response","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,QAA+C,OAA/C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAQC,KAAR,MAAoB,OAApB,C,CAGA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAG,EADE;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB,C,CAMA;;AACA,OAAO,MAAMC,aAAa,GAAGR,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC,CADgD,CAGhD;;AACA,iBAAeS,eAAf,GAAiC;AAC7B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,sBAAV,CAAlB;AAEAH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,kBADD;AAELC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KAPD,CAOE,OAAMC,GAAN,EAAW;AACTP,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,mBADD;AAELC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFtB,OAAD,CAAR;AAIH;AACJ;;AAED,iBAAee,iBAAf,CAAiCC,EAAjC,EAAqC;AACjC,QAAI;AACA,YAAMnB,KAAK,CAACoB,MAAN,CAAc,wBAAuBD,EAAG,EAAxC,CAAN;AACAV,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,oBADD;AAELC,QAAAA,OAAO,EAAEK;AAFJ,OAAD,CAAR;AAIH,KAND,CAME,OAAMH,GAAN,EAAW;AACTP,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,mBADD;AAELC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFtB,OAAD,CAAR;AAIH;AACJ;;AAED,iBAAekB,cAAf,CAA8BC,WAA9B,EAA2C;AACvC,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;;AAKA,QAAI;AACA,YAAMb,GAAG,GAAG,MAAMX,KAAK,CAACyB,IAAN,CAAW,sBAAX,EAAmCH,WAAnC,EAAgDC,MAAhD,CAAlB;AAEAd,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,iBADD;AAELC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KAPD,CAOE,OAAMC,GAAN,EAAW;AACTP,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,mBADD;AAELC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFtB,OAAD,CAAR;AAIH;AACJ;;AAED,sBAAQ,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAI;AACrCD,MAAAA,YAAY,EAAEM,KAAK,CAACN,YADiB;AAErCC,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAFwB;AAGrCC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAHsB;AAIrCM,MAAAA,eAJqC;AAKrCQ,MAAAA,iBALqC;AAMrCG,MAAAA;AANqC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQHd,QARG,CAAR;AAUC,CAlEM","sourcesContent":["import React, {createContext, useReducer} from 'react';\nimport AppReducer from './AppReducer'\nimport  axios  from 'axios'\n\n\n//Initial State\nconst initialState = {\n    transactions:  [],\n    error: null,\n    loading: true\n}\n\n// Create Context \nexport const GlobalContext = createContext(initialState);\n\n//Provider Component\nexport const GlobalProvider = ({ children }) => {\nconst [state, dispatch] = useReducer(AppReducer, initialState)\n\n//Actions\nasync function getTransactions() {\n    try {\n        const res = await axios.get('/api/v1/transactions')\n\n        dispatch({\n            type: 'GET_TRANSACTIONS',\n            payload: res.data.data\n        })\n    } catch(err) {\n        dispatch({\n            type: 'TRANSACTION_ERROR',\n            payload: err.response.data.error\n        })\n    }\n}\n\nasync function deleteTransaction(id) {\n    try {\n        await axios.delete(`/api/v1/transactions/${id}`)\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        });\n    } catch(err) {\n        dispatch({\n            type: 'TRANSACTION_ERROR',\n            payload: err.response.data.error\n        });\n    }\n}\n\nasync function addTransaction(transaction) {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    try {\n        const res = await axios.post('/api/v1/transactions', transaction, config)\n\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: res.data.data\n        });\n    } catch(err) {\n        dispatch({\n            type: 'TRANSACTION_ERROR',\n            payload: err.response.data.error\n        });\n    }\n}\n\nreturn (<GlobalContext.Provider value = {{\n    transactions: state.transactions,\n    error: state.error,\n    loading: state.loading,\n    getTransactions,\n    deleteTransaction,\n    addTransaction\n}}>\n    {children}\n</GlobalContext.Provider>);\n}"]},"metadata":{},"sourceType":"module"}