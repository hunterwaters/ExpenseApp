{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","components/utils/storage.js","components/Home.js","App.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","hmtlFor","getFromStorage","valueStr","localStorage","getItem","JSON","parse","err","Home","props","isLoading","token","signupError","signinError","signInEmail","signInPassword","signupFirstName","signupLastName","signupEmail","signupPassword","onTextboxChangeSignInEmail","bind","onTextboxChangeSignInPassword","onTextboxChangeSignUpEmail","onTextboxChangeSignUpPassword","onTextboxChangeSignUpFirstName","onTextboxChangeSignUpLastName","onSignIn","onSignUp","logout","obj","fetch","then","json","success","setState","this","event","method","body","stringify","firstName","lastName","email","password","message","console","log","setItem","setInStorage","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d3f23eb.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <h2>\n            Expense Tracker\n        </h2>\n    )\n}\n","export default  (state, action) => {\n    switch(action.type){\n\n        case 'GET_TRANSACTIONS':\n            return {\n                ...state,\n                loading: false,\n                transactions: action.payload\n            }\n       \n            case 'DELETE_TRANSACTION':\n            return {\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\n            }\n           \n            case 'ADD_TRANSACTION':\n                return {\n                    ...state,\n                    transactions:[ ...state.transactions, action.payload,]\n                }\n\n                case 'TRANSACTION_ERROR':\n                    return {\n                        ...state, \n                        error: action.payload\n                    }\n        default:\n            return state;\n    }\n}","import React, {createContext, useReducer} from 'react';\nimport AppReducer from './AppReducer'\nimport  axios  from 'axios'\n\n\n//Initial State\nconst initialState = {\n    transactions:  [],\n    error: null,\n    loading: true\n}\n\n// Create Context \nexport const GlobalContext = createContext(initialState);\n\n//Provider Component\nexport const GlobalProvider = ({ children }) => {\nconst [state, dispatch] = useReducer(AppReducer, initialState)\n\n//Actions\nasync function getTransactions() {\n    try {\n        const res = await axios.get('/api/v1/transactions')\n\n        dispatch({\n            type: 'GET_TRANSACTIONS',\n            payload: res.data.data\n        })\n    } catch(err) {\n        dispatch({\n            type: 'TRANSACTION_ERROR',\n            payload: err.response.data.error\n        })\n    }\n}\n\nasync function deleteTransaction(id) {\n    try {\n        await axios.delete(`/api/v1/transactions/${id}`)\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        });\n    } catch(err) {\n        dispatch({\n            type: 'TRANSACTION_ERROR',\n            payload: err.response.data.error\n        });\n    }\n}\n\nasync function addTransaction(transaction) {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    try {\n        const res = await axios.post('/api/v1/transactions', transaction, config)\n\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: res.data.data\n        });\n    } catch(err) {\n        dispatch({\n            type: 'TRANSACTION_ERROR',\n            payload: err.response.data.error\n        });\n    }\n}\n\nreturn (<GlobalContext.Provider value = {{\n    transactions: state.transactions,\n    error: state.error,\n    loading: state.loading,\n    getTransactions,\n    deleteTransaction,\n    addTransaction\n}}>\n    {children}\n</GlobalContext.Provider>);\n}","\n export function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}","import React, { useContext } from 'react';\nimport {GlobalContext} from '../context/GlobalState';\nimport  {numberWithCommas } from './utils/format'\n\nexport const Balance = () => {\n    const { transactions } = useContext(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n    \n    return (\n        <>\n        <h4>Balance</h4>\n        <h1>${numberWithCommas(total)}</h1>\n        </>\n    )\n}\n","import React, { useContext } from 'react'\nimport {GlobalContext} from '../context/GlobalState';\nimport  {numberWithCommas } from './utils/format'\n\nexport const IncomeExpenses = () => {\n    const { transactions } = useContext(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.amount);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n    return (\n        <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p  className=\"money plus\">${numberWithCommas(income)}</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n          <p  className=\"money minus\">${numberWithCommas(expense)}</p>\n        </div>\n      </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport {GlobalContext} from '../context/GlobalState';\nimport  {numberWithCommas } from './utils/format'\n\n\nexport const Transaction = ( { transaction }) => {\n    const { deleteTransaction} = useContext(GlobalContext)\n    const sign = transaction.amount < 0 ? '-' : '+';\n    return (\n        <li className={transaction.amount < 0 ? 'minus' : 'plus' }>\n          {transaction.text} <span>{sign}${numberWithCommas(Math.abs(transaction.amount))}</span><button \n          onClick ={() => deleteTransaction(transaction._id)} className=\"delete-btn\">x</button>\n        </li>\n    )\n}\n","import React, { useContext , useEffect} from 'react';\nimport {GlobalContext} from '../context/GlobalState';\nimport { Transaction } from './Transaction'\n\nexport const TransactionList = () => {\n const { transactions, getTransactions } = useContext(GlobalContext);\n \n useEffect(() => {\n     getTransactions();\n }, []);\n\n        return (\n            <>\n                <h3>History</h3>\n      <ul  className=\"list\">\n          {transactions.map(transaction => (<Transaction key = {transaction.id}  transaction = {transaction} />))}\n      </ul>\n            </>\n        )\n    }\n\n\nexport default TransactionList\n","import React, {useState, useContext} from 'react';\nimport {GlobalContext} from '../context/GlobalState';\n\n\nexport const AddTransaction = () => {\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n\n    const   {addTransaction } = useContext(GlobalContext)\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const newTransaction = {\n            id: Math.floor(Math.random() * 10000000),\n            text,\n            amount: +amount\n        }\n        addTransaction(newTransaction);\n    }\n\n    return (\n        <>\n            <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input type=\"text\" value = {text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\n        </div>\n        <div className=\"form-control\">\n          <label hmtlFor=\"amount\"\n            >Amount <br />\n            (negative - expense, positive - income)</label\n          >\n          <input type=\"number\"value = {amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n        </>\n    )\n}\n","export function getFromStorage(key) {\n    if(!key) {\n        return null;\n    }\n\n    try{\n        const valueStr = localStorage.getItem(key);\n        if(valueStr) {\n            return JSON.parse(valueStr);\n        }\n        return null;\n    } catch(err) {\n        return null;\n    }\n}\n\nexport function setInStorage(key, obj) {\n    if(!key) {\n        console.log('Error key is missing')\n    }\n    try {\n        localStorage.setItem(key, JSON.stringify(obj));\n    } catch(err) {\n        console.log(err)\n    }\n}","import React  from 'react';\n\nimport {\n    getFromStorage,\n    setInStorage,\n} from './utils/storage';\n\n export class Home extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isLoading: true,\n            token: '',\n            signupError: '',\n            signinError: '',\n            signInEmail: '',\n            signInPassword: '',\n            signupFirstName: '',\n            signupLastName: '',\n            signupEmail: '',\n            signupPassword: '',\n        };\n\n        this.onTextboxChangeSignInEmail = this.onTextboxChangeSignInEmail.bind(this);\n        this.onTextboxChangeSignInPassword = this.onTextboxChangeSignInPassword.bind(this);\n        this.onTextboxChangeSignUpEmail = this.onTextboxChangeSignUpEmail.bind(this);\n        this.onTextboxChangeSignUpPassword = this.onTextboxChangeSignUpPassword.bind(this);\n        this.onTextboxChangeSignUpFirstName = this.onTextboxChangeSignUpFirstName.bind(this);\n        this.onTextboxChangeSignUpLastName = this.onTextboxChangeSignUpLastName.bind(this);\n\n        this.onSignIn = this.onSignIn.bind(this);\n        this.onSignUp = this.onSignUp.bind(this);\n        this.logout = this.logout.bind(this);\n    }\n    componentDidMount() {\n        const obj = getFromStorage('expense_trackerr');\n        if(obj && obj.token){\n            const { token } = obj;\n            fetch('/api/account/verify?token=' + token)\n            .then(res => res.json())\n            .then(json => {\n                if(json.success) {\n                    this.setState({\n                        token,\n                        isLoading: false\n                    })\n                } else {\n                    this.setState({\n                        isLoading: false\n                    })\n                }\n            })\n        } else {\n            this.setState({\n                isLoading: false\n            })\n        }\n    }\n\n    onTextboxChangeSignInEmail(event) {\n        this.setState({\n            signInEmail: event.target.value,\n        })\n    }\n\n    onTextboxChangeSignInPassword(event) {\n        this.setState({\n            signInPassword: event.target.value,\n        })\n    }\n\n    onTextboxChangeSignUpEmail(event) {\n        this.setState({\n            signupEmail: event.target.value,\n        })\n    }\n\n    onTextboxChangeSignUpPassword(event) {\n        this.setState({\n            signupPassword: event.target.value,\n        })\n    }\n\n    onTextboxChangeSignUpFirstName(event) {\n        this.setState({\n            signupFirstName: event.target.value,\n        })\n    }\n\n    onTextboxChangeSignUpLastName(event) {\n        this.setState({\n            signupLastName: event.target.value,\n        })\n    }\n\n    onSignUp() {\n        //grab state\n        const {\n            signupFirstName,\n            signupLastName,\n            signupEmail,\n            signupPassword\n        } = this.state;\n\n        this.setState({\n            isLoading: true,\n        })\n        \n        \n        //POST request to backend\n        //eslint-disable-next-line\n        fetch('/api/account/signup', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                firstName: signupFirstName,\n                lastName: signupLastName,\n                email: signupEmail,\n                password:  signupPassword,\n            }),\n        }) .then( res => res.json())\n        .then(json => {\n                if(json.success) {\n                    this.setState({\n                        signupError: json.message,\n                        isLoading: false,\n                        signupEmail: '',\n                        signupPassword: '',\n                        signupFirstName: '',\n                        signupLastName: '',                    });\n                }else {\n                    this.setState({\n                        signupError: json.message,\n                        isLoading: false\n                    });\n                }\n        })\n    }\n\n    onSignIn() {\n        //grab state\n        const {\n            signInEmail,\n            signInPassword\n        } = this.state;\n\n        this.setState({\n            isLoading: true,\n        })\n          //POST request to backend\n          //eslint-disable-next-line\n          fetch('/api/account/signin', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email: signInEmail,\n                password:  signInPassword,\n            }),\n        }) .then( res => res.json())\n        .then(json => {\n                if(json.success) {\n                    setInStorage('expense_tracker',  { token: json.token});\n                    this.setState({\n                        signinError: json.message,\n                        isLoading: false,\n                        signInEmail: '',\n                        signInPassword: '',\n                        token: json.token\n                        });\n                }else {\n                    this.setState({\n                        signinError: json.message,\n                        isLoading: false\n                    });\n                }\n        })\n        //grab state\n        //POST request to backend\n    }\n    logout() {\n        this.setState({\n            isLoading: true,\n        })\n        const obj = (getFromStorage('expense_tracker')) ;\n        if(obj && obj.token){\n            const { token } = obj;\n            //verify token\n            fetch('/api/account/logout?token=' + token)\n            .then(res => res.json())\n            .then(json => {\n                if(json.success) {\n                    this.setState({\n                        token: '',\n                        isLoading: false\n                    })\n                } else {\n                    this.setState({\n                        isLoading: false\n                    })\n                }\n            })\n        } else {\n            this.setState({\n                isLoading: false\n            })\n        }\n    }\n\n    render() {\n        const {\n            isLoading,\n            token,\n            signinError,\n            signInEmail,\n            signInPassword,\n            signupFirstName,\n            signupLastName,\n            signupEmail,\n            signupPassword,\n            signupError,\n\n        } = this.state;\n\n        if(isLoading) {\n            return (<div><p>Loading...</p></div>);\n        }\n\n        if(!token) {\n            return (\n                <>\n                <div>\n                    <div className = \"signin\">\n                        {\n                            (signinError) ? (\n                                <p>{signinError}</p>\n                            ) :(null)\n                        }\n                        <p>Sign In</p>\n                        <input type = \"email\" placeholder = \"Email\" value = {signInEmail} onChange={this.onTextboxChangeSignInEmail} />\n                        <input type = \"password\" placeholder = \"Password\" value = {signInPassword} onChange={this.onTextboxChangeSignInPassword} />\n                        <button onClick = {this.onSignIn}>Sign In</button>\n                    </div>\n                </div>\n                <br />\n                <br/>\n                <div className = \"signup\">\n                {\n                            (signupError) ? (\n                                <p>{signupError}</p>\n                            ) :(null)\n                        }\n                        <p>Sign Up</p>\n                        <input type = \"text\" placeholder = \"First Name\" value = {signupFirstName} onChange={this.onTextboxChangeSignUpFirstName} />\n                        <input type = \"text\" placeholder = \"Last Name\" value = {signupLastName} onChange = {this.onTextboxChangeSignUpLastName} />\n                        <input type = \"email\" placeholder = \"Email\" value = {signupEmail} onChange = {this.onTextboxChangeSignUpEmail} />\n                        <input type = \"password\" placeholder = \"Password\" value = {signupPassword} onChange = {this.onTextboxChangeSignUpPassword} />\n                        <button onClick = {this.onSignUp}>Sign Up</button>\n                       \n                    </div>\n    </>\n            )\n        }\n        return (\n            <div>\n            <div>Account</div>\n            <button onClick = {this.logout}>Logout</button>\n            </div>\n        )\n    }\n}\n\n","import React from 'react';\nimport { Header } from './components/Header'\nimport { Balance } from './components/Balance'\nimport { IncomeExpenses } from './components/IncomeExpenses'\nimport { TransactionList } from './components/TransactionList'\nimport { AddTransaction } from './components/AddTransaction'\nimport { Home } from './components/Home';\n\nimport { GlobalProvider } from './context/GlobalState'\n//import { loadUser } from './actions/authActions';\n\nimport './App.css';\n\nfunction App()  {\n\n  //componentDidMount()  {\n    //store.dispatch(loadUser());\n  //}\n\n  return (\n    <GlobalProvider>\n      <Home />\n     <Header />\n     <div className = \"container\">\n       <Balance />\n       <IncomeExpenses />\n       <TransactionList />\n       <AddTransaction />\n     </div>\n    </GlobalProvider>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}